version: '2.1'
services:
  # home assistant services
  homeassistant:
    image: lscr.io/linuxserver/homeassistant:latest
    container_name: homeassistant
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ:-UTC}
    volumes:
      - '/fast/docker/home-assistant/media:/media'
      - '/home/docker/home-assistant/config:/config'
      - '/home/docker/home-assistant/db:/config/db'
      - '/home/docker/home-assistant/logs:/config/logs'
    ports:
      - 8123:8123
    restart: unless-stopped
    networks:
      macvlan:
        ipv4_address: 10.17.17.30
      bridge:
        ipv4_address: 172.18.0.5

  mosquitto:
    image: eclipse-mosquitto:latest
    volumes:
      - '/home/docker/mosquitto/config/:/mosquitto/config/'
      - '/home/docker/mosquitto/log/:/mosquitto/log/'
      - '/home/docker/mosquitto/data/:/mosquitto/data/'
    ports:
      - 1883:1883
      - 9001:9001
    restart: unless-stopped
    networks:
      bridge:
        ipv4_address: 172.18.0.2
      macvlan:
        ipv4_address: 10.17.17.31

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    restart: unless-stopped
    volumes:
      - '/home/docker/zigbee2mqtt/data:/app/data'
      - '/run/udev:/run/udev:ro'
    ports:
      - 8080:8080
    environment:
      - TZ=${TZ:-UTC}
    devices:
      - /dev/ttyUSB0:/dev/ttyACM0
    networks:
      bridge:
        ipv4_address: 172.18.0.3
      macvlan:
        ipv4_address: 10.17.17.32

  appdaemon:
    container_name: appdaemon
    build:
      context: ./docker-files/appdaemon-custom
      dockerfile: dockerfile
    image: acockburn/appdaemon:latest
    links:
      - homeassistant
    volumes:
      - '/home/docker/appdaemon/compose/apps:/apps'
      - '/home/docker/appdaemon/conf:/conf'
      - '/home/docker/appdaemon/logs:/logs'
      - '/home/docker/home-assistant/config/secrets.yaml:/secrets.yaml'
      - '/etc/localtime:/etc/localtime:ro'
    environment:
      - TZ=${TZ:-UTC}
    ports:
      - 5050:5050
    networks:
        bridge:
          ipv4_address: 172.18.0.4

  # pihole
  pihole:
    container_name: pihole
    image: cbcrowe/pihole-unbound:latest
    hostname: ${HOSTNAME}
    domainname: ${DOMAIN_NAME}
    ports:
      - '443:443/tcp'
      - '53:53/tcp'
      - '53:53/udp'
      - '80:80/tcp'

    environment:
      - FTLCONF_LOCAL_IPV4=${FTLCONF_LOCAL_IPV4}
      - TZ=${TZ:-UTC}
      - WEBPASSWORD=${PIHOLE_WEBPASSWORD}
      - WEBTHEME=${WEBTHEME:-default-light}
      - REV_SERVER=${REV_SERVER:-false}
      - REV_SERVER_TARGET=${REV_SERVER_TARGET}
      - REV_SERVER_DOMAIN=${REV_SERVER_DOMAIN}
      - REV_SERVER_CIDR=${REV_SERVER_CIDR}
      - PIHOLE_DNS_=127.0.0.1#5335
      - DNSSEC='true'
      - DNSMASQ_LISTENING=single
    # Volumes store your data between container upgrades
    volumes:
      - '/home/docker/etc-pihole:/etc/pihole'
      - '/home/docker/etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    restart: unless-stopped
    networks:
      macvlan:
        ipv4_address: 10.17.17.11
  
  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    container_name: duckdns
    environment:
      - TZ=${TZ:-UTC}
      - SUBDOMAINS=${DNS_SUBDOMAINS}
      - TOKEN=${DUCK_DNS_TOKEN}
      - LOG_FILE=true
    volumes:
      - /home/docker/duckdns/config:/config
    restart: unless-stopped


networks:
  macvlan:
    driver: macvlan
    driver_opts:
      parent: ens18
    ipam:
      config:
        -
          subnet: 10.17.17.0/24
          gateway: 10.17.17.3
  bridge:
    driver: bridge
    ipam:
      driver: default
      config:
        -
          subnet: 172.18.0.0/16
          gateway: 172.18.0.1

